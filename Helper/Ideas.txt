create an interface that will wrap around the fields of the article and the list of comments that 
go with it, that interface model will be used and passed as the data template in the review page
and article page list respectively

that way you can pass that interface and wrapboth objects in one so you cant be limited
to only 1 object 

add drop down menu that enable after you login (Done)

error msg could be a property in the MainWindowVM and every user control could change it or we could
inherit it from the baseviewmodel class for 

have a "Logs" model which tracks people on the program
it shoupd have user_id, string activity and datetime (Done)

entity and liked entity (Done )

passwordboxes could use binding if you use attached property
search wpf passwordboxes and binding

the above idea was super bad, try "nested set model", instead